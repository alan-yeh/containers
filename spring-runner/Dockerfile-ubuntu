########################################################
# Stage 1
# 获取构建需要用到的安装包
########################################################
FROM centralx/busybox:latest as builder
ARG TARGETARCH
ARG GOSU_VERSION

WORKDIR /workspace

# 下载 gosu
ADD "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${TARGETARCH}" ./gosu
# 添加 entrypoint.sh
ADD ./entrypoint-ubuntu.sh ./entrypoint.sh

########################################################
# Stage 2
# 安装时区
# 复制 gosu 和 entrypoint.sh
# 创建用户
# 创建工作目录、挂载点
# 执行启动脚本
########################################################
FROM image

# 安装时区
ENV TZ=Asia/Shanghai
RUN apt-get update && \
    apt-get install -y --no-install-recommends tzdata ca-certificates curl telnet iputils-ping nano vim && \
    rm -rf /var/lib/apt/lists/*

# 复制启动可执行文件要用到的辅助工具
COPY --from=builder   /workspace/gosu            /usr/local/bin/gosu
COPY --from=builder   /workspace/entrypoint.sh   /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/*

# 添加 runner 分组、runner 用户
# groupadd
# -r: 创建系统组
# -g: 指定用户组 GID
# useradd
# -r: 创建系统用户
# -m, --create-home: 创建用户主目录，默认是 /home/<user>
# -g: 指定用户所属组
# -u: 指定用户 UID
RUN groupadd -r -g 1000 runner && useradd -r -m -g runner -u 1000 runner

# 工作目录
WORKDIR /workspace
# 创建数据卷挂载目录
RUN mkdir /workspace/config && mkdir /workspace/logs && mkdir /workspace/data

# 应用数据目录: /workspace/data
# 应用缓存目录: /workspace/cache
# 应用配置目录: /workspace/config
# 应用日志目录: /workspace/logs
VOLUME ["/workspace/data", "/workspace/cache", "/workspace/config", "/workspace/logs"]

# 暴露端口
EXPOSE 80

# 可执行文件名
ENV RUNNER_EXECUTABLE application.jar

# 启动脚本
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# JVM 调优参数
# 默认最小内存 256m，最大内存 256m
CMD ["-Xms256m", "-Xmx256m"]